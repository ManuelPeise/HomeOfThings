// <auto-generated />
using System;
using Database.HotContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.HotContext.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240316125124_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Date.Models.Entities.AppModuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("ModuleKey")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AppModulesTable");
                });

            modelBuilder.Entity("Date.Models.Entities.Family.FamilyEntity", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyGuid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("FamilyId");

                    b.ToTable("FamilyTable");
                });

            modelBuilder.Entity("Date.Models.Entities.Log.LogEntity", b =>
                {
                    b.Property<int>("LogMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("ExMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("LogMessageId");

                    b.ToTable("LogTable");
                });

            modelBuilder.Entity("Date.Models.Entities.User.UserAccessRightEntity", b =>
                {
                    b.Property<int>("UserAccessRightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool>("Delete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Deny")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRightId")
                        .HasColumnType("int");

                    b.Property<bool>("View")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Write")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserAccessRightId");

                    b.ToTable("UserAccessRightsTable");
                });

            modelBuilder.Entity("Date.Models.Entities.User.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("FamilyGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("Date.Models.Entities.User.UserRightEntity", b =>
                {
                    b.Property<int>("UserRightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("ModuleKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("UserRightId");

                    b.ToTable("UserRightTable");

                    b.HasData(
                        new
                        {
                            UserRightId = 1,
                            CreatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(1253),
                            CreatedBy = "System",
                            ModuleKey = 1,
                            Name = "FamilyAdministration",
                            UpdatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(1254),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            UserRightId = 2,
                            CreatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(1257),
                            CreatedBy = "System",
                            ModuleKey = 2,
                            Name = "FamilyManagement",
                            UpdatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(1258),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Date.Models.Entities.User.UserRoleEntity", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleKey")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoleTable");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            CreatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(973),
                            CreatedBy = "System",
                            Description = "Default User",
                            Name = "User",
                            RoleKey = 0,
                            UpdatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(969),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            UserRoleId = 2,
                            CreatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(983),
                            CreatedBy = "System",
                            Description = "Admin User",
                            Name = "Admin",
                            RoleKey = 1,
                            UpdatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(982),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            UserRoleId = 3,
                            CreatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(985),
                            CreatedBy = "System",
                            Description = "System Admin User",
                            Name = "SystemAdmin",
                            RoleKey = 2,
                            UpdatedAt = new DateTime(2024, 3, 16, 12, 51, 24, 622, DateTimeKind.Utc).AddTicks(985),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Date.Models.Entities.User.UserRolesEntity", b =>
                {
                    b.Property<int>("UserRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserRolesId");

                    b.ToTable("UserRolesTable");
                });
#pragma warning restore 612, 618
        }
    }
}
